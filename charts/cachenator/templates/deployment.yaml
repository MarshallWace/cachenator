{{- $root := . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cachenator.name" . }}
  labels: {{ include "cachenator.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 -}}
  {{ end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels: {{ include "cachenator.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.strategyType }}
    {{- with .Values.strategyRollingParams }}
    rollingUpdate:
      {{ toYaml . | nindent 6 }}
    {{- end }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: {{ .Release.Name }}
        kubectl.kubernetes.io/default-logs-container: {{ .Release.Name }}
      {{- with .Values.podAnnotations }}
        {{ toYaml . | nindent 8 }}
      {{- end }}
      name: {{ template "cachenator.name" . }}
      labels: {{ include "cachenator.labels" . | nindent 8 }}
      {{- if .Values.podLabels }}
      {{- range $key, $value := .Values.podLabels }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
      volumes:
      {{- if .Values.enable_tmp_in_ram }}
        - name: tmp-in-mem
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.tmp_ram_size_limit }}
      {{- end }}
      {{- with .Values.volumes }}
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.runtimeClassName }}
      runtimeClassName: {{ . }}
      {{- end }}
      initContainers:
      {{- with .Values.initContainers }}
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.serviceAccount }}
      serviceAccountName: {{ .name }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- if .Values.dnsConfig }}
      dnsConfig: {{ toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- with .Values.hostNetwork }}
      hostNetwork: {{ . }}
      {{- end }}
      {{- with .Values.hostPID }}
      hostPID: {{ . }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.readinessGates }}
      readinessGates:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.podPriority }}
      priorityClassName: {{ . }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image.registry }}/{{ required ".Values.image.image is required" .Values.image.image }}:{{.Values.image.tag}}
          {{- if .Values.imagePullPolicy }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- end }}
          {{- if .Values.workingDir }}
          workingDir: {{ .Values.workingDir }}
          {{- end }}
          {{- with .Values.ports }}
          ports:
          {{- range $port := . }}
            - name: {{ $port.name }}
              containerPort: {{ $port.port }}
          {{- end }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.podSecurityContext }}
          securityContext: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.overrideCommand }}
          command:
{{ toYaml . | indent 12 }}
          {{- end }}
          env: {{ include "cachenator.env" . }}
          {{- with .Values.envFrom }}
          envFrom:
{{ toYaml . | indent 12 }}
          {{- end }}
          args:
          {{- if .Values.args }}
          {{- range $arg := . }}
            - {{ $arg | toYaml | quote }}
          {{- end }}
          {{- else }}
            - "-port={{.Values.caches.port}}"
            - "-s3-endpoint={{.Values.s3.endpoint}}"
            - "-s3-download-concurrency={{.Values.s3.download_concurrency}}"
            - "-s3-download-part-size={{.Values.s3.download_part_size}}"
            - "-max-cache-size={{.Values.caches.max_cache_size}}"
            - "-timeout={{.Values.caches.get_blob_timeout}}"
            {{- if .Values.caches.read_only }}
            - "-read-only"
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - "metrics-port={{ .Values.metrics.metrics_port }}"
            {{ else }}
            - "-disable-http-metrics"
            {{- end }}
          {{- end }}

          {{- if or ( or (.Values.volumeMounts) .Values.enable_tmp_in_ram )  }}
          volumeMounts:
          {{- end }}
          {{- if .Values.enable_tmp_in_ram }}
            - name: tmp-in-mem
              mountPath: /tmp
          {{- end }}
          {{- with .Values.volumeMounts }}
{{ toYaml . | indent 12 }}
          {{- end }}
        {{- with .Values.sidecars }}
{{ toYaml . | indent 8 }}
        {{- end }}
